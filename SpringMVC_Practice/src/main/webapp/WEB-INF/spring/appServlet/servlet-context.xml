<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 
		2. 
		/ 경로로 들어오는것은 DispatcherServlet가 전부 가로채서 Controller로 보낼때 
		/resources/**가 포함된 경로는 제외시키고 /resources/를 스캔하는 코드.
		<resources mapping="/A/**" location="/B/" />
		*A경로로 들어오는 요청은 *B파일에서 검색
	 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- 
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		
		6.Controller에서 return한 페이지 이름(ex:home)에 "/WEB-INF/views/" 과  ".jsp"를 조립하고
		해당 페이지를 브러우저로 연다.
		/WEB-INF/views/ + home + .jsp
			
		 -->
	</beans:bean>
	
	<!-- 
	<context:component-scan base-package="com.javalec.spring_ex_pjt" />:
		패키지 내에 있는 @Controller를 찾아 컨트롤러로 등록해주는 코드
	
	3.DispatcherServlet에서 보낸 요청을 servlet-context.xml에서 찾을때
	com.javalec.spring_ex_pjt(페키지)안에 있는 내용을 Scan한다. 
	@Controller를 만나면 해당 파일은 Controller가 된다.
	
	패키지를 새로 만들어 컨트롤러를 지정할때마다 새로 만들어줘야한다.(?)
	-->
	<context:component-scan base-package="com.javalec.spring_ex_pjt" />
	
	
	
</beans:beans>
